---
### Install apt keys
- name: Setup new apt signing key
  become: true
  manage_apt_key:
    input_key_file: "{{ item.input_key_file }}"
    output_key_file: "{{ item.output_key_file }}"
  with_items: "{{ apt_keys }}"

- name: Setup PPAs
  become: true
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    mode: 0644
    update_cache: yes
  with_items: "{{ ppa_repositories }}"

- name: Setup traditional APT repositories
  become: true
  ansible.builtin.apt_repository:
    repo: "{{ item.repo }}"
    filename: "{{ item.filename }}"
    mode: 0644
    update_cache: yes
  with_items: "{{ apt_repositories }}"

- name: Install apt packages ({{ package_set }})
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
  with_items: "{{ apt_packages }}"

### Install deb files
- name: Install deb packages ({{ package_set }})
  become: true
  ansible.builtin.apt:
    deb: "{{ item }}"
  with_items: "{{ deb_packages }}"

### Setup Flatpak Remote
- name: Install Flatpak remote
  become: true
  community.general.flatpak_remote:
    name: "{{ item.name }}"
    flatpakrepo_url: "{{ item.url }}"
    method: "{{ item.method or 'system' }}"
  with_items: "{{ flatpak_remotes }}"

### Install Flatpak Packages
- name: Install Flatpak packages ({{ package_set }})
  become: true
  community.general.flatpak:
    name: "{{ item.name }}"
    remote: "{{ item.remote or 'flathub' }}"
    method: "{{ item.method or 'system' }}"
  with_items: "{{ flatpak_packages }}"

### Install Snap Packages
- name: Install Snap packages ({{ package_set }})
  become: true
  community.general.snap:
    name: "{{ item.name }}"
    classic: "{{ item.classic or 'no' }}"
  with_items: "{{ snap_packages }}"

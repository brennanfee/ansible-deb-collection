---
- name: SSH Role Verify
  hosts: all
  gather_facts: false

  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:

    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: Verify packages are installed
      ansible.builtin.assert:
        that:
          - "'openssh-server' in ansible_facts.packages"
          - "'openssh-client' in ansible_facts.packages"

    - name: Host Key Regeneration File Exists
      ansible.builtin.file:
        path: /etc/ssh/ssh_host_keys_regenerated
        mode: 0644
        state: present

    - name: RSA Host File Exists
      ansible.builtin.file:
        path: /etc/ssh/ssh_host_rsa_key
        mode: 0644
        state: present

    - name: ED25519 Host File Exists
      ansible.builtin.file:
        path: /etc/ssh/ssh_host_ed25519_key
        mode: 0644
        state: present

    - name: ECDSA Host File Exists
      ansible.builtin.file:
        path: /etc/ssh/ssh_host_ecdsa_key
        mode: 0644
        state: present

    - name: DSA Host File DOES NOT Exists
      ansible.builtin.file:
        path: /etc/ssh/ssh_host_dsa_key
        state: absent

    - name: SSHD Config File Managed By Ansible
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: no
      check_mode: yes
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: SSH Config File Managed By Ansible
      ansible.builtin.lineinfile:
        path: /etc/ssh/ssh_config
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: no
      check_mode: yes
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: SSH Service is running
      ansible.builtin.assert:
        that: "ansible_facts.services['ssh'].state == 'running'"

    - name: SSH Service is enabled
      ansible.builtin.command:
        cmd: "systemctl is-enabled ssh"
      register: service
      changed_when: false
      failed_when: "service.stdout != 'enabled'"
